{"version":3,"sources":["webpack:///./dist/ngx-rbac/fesm5/ngx-rbac.js","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/services/users.service.ts","webpack:///./src/app/services/users.ts","webpack:///./src/app/toolbox/toolbox.component.html","webpack:///./src/app/toolbox/toolbox.component.scss","webpack:///./src/app/toolbox/toolbox.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiC;AACsC;AACpB;AAC6F;AAC3G;;AAErC;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oDAAe,GAAG;AAC5C;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,iCAAiC,EAAE;AACxD;AACA,oBAAoB;AACpB;AACA,qBAAqB,iCAAiC,EAAE;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,qBAAqB,EAAE;AACvB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,yBAAyB,+BAA+B,EAAE;AAC1D;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB,sDAAQ,GAAG;AAC/B;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,uBAAuB,sDAAQ,GAAG;AAClC;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,yBAAyB,wDAAwD,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,iCAAiC,yCAAyC,EAAE;AAC5E;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,iDAAiD;AACjD,SAAS,gCAAgC,OAAO,oDAAM,oBAAoB,GAAG;AAC7E,SAAS,gCAAgC,OAAO,oDAAM,qBAAqB;AAC3E,MAAM;AACN,wDAAwD,sEAAgB,EAAE,6CAA6C,2BAA2B,4DAAM,WAAW,4DAAM,YAAY,EAAE,6CAA6C;AACpO;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,qBAAqB;AACrB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB,EAAE,GAAG,EAAE;AAClD;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,qBAAqB,wBAAwB,EAAE;AAC/C;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,gDAAgD,EAAE;AAC5E;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,0DAA0D,EAAE;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,sDAAsD;AACtD,SAAS,OAAO,8DAAc,EAAE;AAChC,SAAS,uBAAuB;AAChC,SAAS,OAAO,sDAAM;AACtB,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,+CAA+C;AAC/C,SAAS,uBAAuB;AAChC,SAAS,OAAO,sDAAM;AACtB,MAAM;AACN,sDAAsD,sEAAgB,EAAE,2CAA2C,yBAAyB,4DAAM,kBAAkB,4DAAM,CAAC,sDAAM,GAAG,EAAE,2CAA2C;AACjO;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,kBAAkB,0DAAG;AACrB;AACA,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE;AAC9C;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB;AACjB;AACA;AACA,gDAAgD;AAChD,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS;AACT,MAAM;AACN;AACA,gBAAgB,OAAO,mDAAK,sBAAsB;AAClD,iBAAiB,OAAO,mDAAK,2BAA2B;AACxD;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb,iBAAiB,4DAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,+BAA+B,YAAY;AAC3C,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA,oBAAoB,+CAA+C;AACnE,oBAAoB,oCAAoC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,oBAAoB,sCAAsC;AAC1D,oBAAoB,+CAA+C;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA,wBAAwB,4DAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;AACD,WAAW,EAAE;AACb;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAE6N;;AAE7N,oC;;;;;;;;;;;AC7uBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;AC9BA,mZAAmZ,iBAAiB,gV;;;;;;;;;;;ACApa,+DAA+D,+H;;;;;;;;;;;;;;;;;;ACArB;AACA;AAO1C;IAGI,sBAAmB,IAAoB;QAApB,SAAI,GAAJ,IAAI,CAAgB;QAFvC,UAAK,GAAG,eAAe,CAAC;QAGpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IACtC,CAAC;IANQ,YAAY;QALxB,+DA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","file":"main.js","sourcesContent":["import { __assign } from 'tslib';\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Inject, Injectable, Component, InjectionToken, NgModule, Directive, ElementRef, Input, defineInjectable, inject } from '@angular/core';\nimport { tap } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgxRbacService = /** @class */ (function () {\n    function NgxRbacService(rules, config) {\n        var _this = this;\n        this.rules = rules;\n        this.config = config;\n        /**\n         * List of current roles\n         */\n        this.roles = {};\n        /**\n         * List of current roles\n         */\n        this.roles$ = new BehaviorSubject({});\n        /**\n         * List of all available roles\n         */\n        this.allRoles = {};\n        setInterval((/**\n         * @return {?}\n         */\n        function () { return console.log(_this.rules); }), 5000);\n        setTimeout((/**\n         * @return {?}\n         */\n        function () { return console.log(_this.rules); }), 1000);\n        // console.log('ROUTES', routes);\n        console.log('SERVICE', rules, config);\n        this.registerRules(rules);\n        this.can = this.can.bind(this);\n        this.setBaseRoles(config.defaultRoles || ['default']);\n        console.log('INIT RBAC', rules, config);\n    }\n    /**\n     * @private\n     * @param {?} roles\n     * @return {?}\n     */\n    NgxRbacService.prototype.nextRoles = /**\n     * @private\n     * @param {?} roles\n     * @return {?}\n     */\n    function (roles) {\n        this.roles = roles;\n        console.warn('ROLES', this.roles);\n        ((/** @type {?} */ (this.roles$))).next(roles);\n    };\n    /**\n     * @return {?}\n     */\n    NgxRbacService.prototype.getBaseRoles = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        return Object.keys(this.roles).filter((/**\n         * @param {?} role\n         * @return {?}\n         */\n        function (role) { return _this.roles[role].base; }));\n    };\n    /**\n     * @param {?} roles\n     * @param {?=} data\n     * @return {?}\n     */\n    NgxRbacService.prototype.setBaseRoles = /**\n     * @param {?} roles\n     * @param {?=} data\n     * @return {?}\n     */\n    function (roles, data) {\n        this.roles = {};\n        this.addBaseRoles(roles, data);\n    };\n    /**\n     * @param {?} roles\n     * @param {?=} data\n     * @return {?}\n     */\n    NgxRbacService.prototype.addBaseRoles = /**\n     * @param {?} roles\n     * @param {?=} data\n     * @return {?}\n     */\n    function (roles, data) {\n        var _this = this;\n        /** @type {?} */\n        var rules = __assign({}, this.roles);\n        roles.forEach((/**\n         * @param {?} role\n         * @return {?}\n         */\n        function (role) {\n            _this.setRole(rules, role, data);\n            rules[role].base = true;\n        }));\n        this.nextRoles(Object.freeze(rules));\n    };\n    /**\n     * @param {?} rules\n     * @return {?}\n     */\n    NgxRbacService.prototype.registerRules = /**\n     * @param {?} rules\n     * @return {?}\n     */\n    function (rules) {\n        var _this = this;\n        console.log(rules);\n        console.log(this.allRoles);\n        /** @type {?} */\n        var allRoles = __assign({}, this.allRoles);\n        Object.keys(rules).forEach((/**\n         * @param {?} rule\n         * @return {?}\n         */\n        function (rule) { return _this.registerRule(allRoles, rule, rules[rule]); }));\n        this.allRoles = Object.freeze(allRoles);\n        this.setBaseRoles(this.getBaseRoles());\n    };\n    /**\n     * @private\n     * @param {?} rules\n     * @param {?} name\n     * @param {?} rule\n     * @return {?}\n     */\n    NgxRbacService.prototype.registerRule = /**\n     * @private\n     * @param {?} rules\n     * @param {?} name\n     * @param {?} rule\n     * @return {?}\n     */\n    function (rules, name, rule) {\n        rules[name] = rule;\n        if (rule.children) {\n            rule.children.forEach((/**\n             * @param {?} item\n             * @return {?}\n             */\n            function (item) {\n                if (!(item in rules)) {\n                    rules[item] = {};\n                }\n            }));\n        }\n    };\n    /**\n     * @private\n     * @param {?} rules\n     * @param {?} role\n     * @param {?=} data\n     * @return {?}\n     */\n    NgxRbacService.prototype.setRole = /**\n     * @private\n     * @param {?} rules\n     * @param {?} role\n     * @param {?=} data\n     * @return {?}\n     */\n    function (rules, role, data) {\n        var _this = this;\n        rules[role] = {};\n        if (this.rules[role]) {\n            if (this.rules[role].children) {\n                this.rules[role].children.forEach((/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                function (item) { return _this.setRole(rules, item, data); }));\n            }\n        }\n    };\n    /**\n     * @param {?} rolesToCheck\n     * @return {?}\n     */\n    NgxRbacService.prototype.is = /**\n     * @param {?} rolesToCheck\n     * @return {?}\n     */\n    function (rolesToCheck) {\n        var _this = this;\n        /** @type {?} */\n        var toCheck = Array.isArray(rolesToCheck) ? rolesToCheck : [rolesToCheck];\n        console.log('check', toCheck, toCheck.some((/**\n         * @param {?} role\n         * @return {?}\n         */\n        function (role) {\n            /** @type {?} */\n            var rule = _this.roles[role];\n            return !!rule;\n        })));\n        return toCheck.some((/**\n         * @param {?} role\n         * @return {?}\n         */\n        function (role) {\n            /** @type {?} */\n            var rule = _this.roles[role];\n            return !!rule;\n        }));\n    };\n    /**\n     * @param {?} rolesToCheck\n     * @param {?=} data\n     * @return {?}\n     */\n    NgxRbacService.prototype.can = /**\n     * @param {?} rolesToCheck\n     * @param {?=} data\n     * @return {?}\n     */\n    function (rolesToCheck, data) {\n        var _this = this;\n        /** @type {?} */\n        var toCheck = Array.isArray(rolesToCheck) ? rolesToCheck : [rolesToCheck];\n        return toCheck.some((/**\n         * @param {?} role\n         * @return {?}\n         */\n        function (role) {\n            /** @type {?} */\n            var rule = _this.roles[role];\n            return !!rule;\n        }));\n    };\n    /**\n     * @param {?} rolesToCheck\n     * @param {?=} data\n     * @return {?}\n     */\n    NgxRbacService.prototype.canAll = /**\n     * @param {?} rolesToCheck\n     * @param {?=} data\n     * @return {?}\n     */\n    function (rolesToCheck, data) {\n        var _this = this;\n        /** @type {?} */\n        var toCheck = Array.isArray(rolesToCheck) ? rolesToCheck : [rolesToCheck];\n        return toCheck.every((/**\n         * @param {?} role\n         * @return {?}\n         */\n        function (role) {\n            /** @type {?} */\n            var rule = _this.roles[role];\n            return !!rule;\n        }));\n    };\n    /**\n     * @param {?} rolesToCheck\n     * @param {?=} data\n     * @return {?}\n     */\n    NgxRbacService.prototype.canSome = /**\n     * @param {?} rolesToCheck\n     * @param {?=} data\n     * @return {?}\n     */\n    function (rolesToCheck, data) {\n        var _this = this;\n        /** @type {?} */\n        var toCheck = Array.isArray(rolesToCheck) ? rolesToCheck : [rolesToCheck];\n        return toCheck.some((/**\n         * @param {?} role\n         * @return {?}\n         */\n        function (role) {\n            /** @type {?} */\n            var rule = _this.roles[role];\n            return !!rule;\n        }));\n    };\n    NgxRbacService.decorators = [\n        { type: Injectable, args: [{\n                    providedIn: 'root',\n                },] }\n    ];\n    /** @nocollapse */\n    NgxRbacService.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: ['rules',] }] },\n        { type: undefined, decorators: [{ type: Inject, args: ['config',] }] }\n    ]; };\n    /** @nocollapse */ NgxRbacService.ngInjectableDef = defineInjectable({ factory: function NgxRbacService_Factory() { return new NgxRbacService(inject(\"rules\"), inject(\"config\")); }, token: NgxRbacService, providedIn: \"root\" });\n    return NgxRbacService;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgxRbacComponent = /** @class */ (function () {\n    function NgxRbacComponent() {\n    }\n    /**\n     * @return {?}\n     */\n    NgxRbacComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n    };\n    NgxRbacComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'rbac-ngx-rbac',\n                    template: \"\\n    <p>\\n      ngx-rbac works!\\n    </p>\\n  \"\n                }] }\n    ];\n    /** @nocollapse */\n    NgxRbacComponent.ctorParameters = function () { return []; };\n    return NgxRbacComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} route\n * @return {?}\n */\nfunction activatedRouteSnapshotToFullPath(route) {\n    return segmentsToPath(route.pathFromRoot);\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction activatedRouteSnapshotToRootPath(route) {\n    return segmentsToPath(route.pathFromRoot, route.url);\n}\n/**\n * @param {?} root\n * @param {?=} minus\n * @return {?}\n */\nfunction segmentsToPath(root, minus) {\n    /** @type {?} */\n    var path = [];\n    root.forEach((/**\n     * @param {?} item\n     * @return {?}\n     */\n    function (item) { return item.url.forEach((/**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return path.push(url); })); }));\n    // console.log(path, minus);\n    if (minus)\n        path.length = path.length - minus.length;\n    return '/' + path.map((/**\n     * @param {?} item\n     * @return {?}\n     */\n    function (item) { return item.toString(); })).join('/');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar AccessibleComponent = /** @class */ (function () {\n    function AccessibleComponent(activatedRoute, rbac, router) {\n        this.activatedRoute = activatedRoute;\n        this.rbac = rbac;\n        this.router = router;\n    }\n    /**\n     * @return {?}\n     */\n    AccessibleComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.activatedRoute.routeConfig.children)\n            throw new Error('AccessibleComponent can not have children, because it can cause a lot of errors with navigation');\n        /** @type {?} */\n        var children = this.activatedRoute.parent.routeConfig.children\n            .filter((/**\n         * @param {?} route\n         * @return {?}\n         */\n        function (route) { return route.component !== AccessibleComponent; }))\n            .filter((/**\n         * @param {?} route\n         * @return {?}\n         */\n        function (route) { return route.data && _this.rbac.can(route.data['roles']); }));\n        if (children.length)\n            this.router.navigateByUrl(activatedRouteSnapshotToRootPath(this.activatedRoute.snapshot) + '/' + children[0].path);\n        else\n            this.router.navigateByUrl('/auth/denied');\n    };\n    AccessibleComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'rbac-accessible',\n                    template: \"<router-outlet></router-outlet>\\n\",\n                    styles: [\"\"]\n                }] }\n    ];\n    /** @nocollapse */\n    AccessibleComponent.ctorParameters = function () { return [\n        { type: ActivatedRoute },\n        { type: NgxRbacService },\n        { type: Router }\n    ]; };\n    return AccessibleComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgxRbacGuard = /** @class */ (function () {\n    function NgxRbacGuard(rbac, router) {\n        this.rbac = rbac;\n        this.router = router;\n    }\n    /**\n     * @param {?} route\n     * @param {?} segments\n     * @return {?}\n     */\n    NgxRbacGuard.prototype.canLoad = /**\n     * @param {?} route\n     * @param {?} segments\n     * @return {?}\n     */\n    function (route, segments) {\n        var _this = this;\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        function (observer) {\n            if (!route.data || !route.data.roles || !Array.isArray(route.data.roles)) {\n                console.warn('Module doesn\\'t have roles', route);\n                observer.next(true);\n                return observer.complete();\n            }\n            if (_this.rbac.is(route.data.roles)) {\n                observer.next(true);\n                return observer.complete();\n            }\n            console.error('You don\\'t have access to load this module');\n            // if (route.data.denyRoute) {\n            // //     this.router.navigateByUrl(activatedRouteSnapshotToRootPath(route) + route.data.denyRoute);\n            // } else {\n            // //     this.router.navigateByUrl(activatedRouteSnapshotToRootPath(route));\n            // }\n            observer.next(false);\n            return observer.complete();\n        }));\n    };\n    /**\n     * @param {?} route\n     * @param {?} state\n     * @return {?}\n     */\n    NgxRbacGuard.prototype.canActivate = /**\n     * @param {?} route\n     * @param {?} state\n     * @return {?}\n     */\n    function (route, state) {\n        return true;\n    };\n    /**\n     * @param {?} route\n     * @param {?} state\n     * @return {?}\n     */\n    NgxRbacGuard.prototype.canActivateChild = /**\n     * @param {?} route\n     * @param {?} state\n     * @return {?}\n     */\n    function (route, state) {\n        var _this = this;\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        function (observer) {\n            console.log('RBAC GUARD', _this.rbac.roles);\n            if (!route.data.roles) {\n                return observer.next(true);\n            }\n            if (_this.rbac.can(route.data.roles)) {\n                return observer.next(true);\n            }\n            console.log('DENY TO REDIRECT');\n            if (route.data.denyRoute) {\n                _this.router.navigateByUrl(activatedRouteSnapshotToRootPath(route) + route.data.denyRoute);\n            }\n            else {\n                _this.router.navigateByUrl(activatedRouteSnapshotToRootPath(route));\n            }\n            return observer.next(false);\n        }));\n    };\n    NgxRbacGuard.decorators = [\n        { type: Injectable, args: [{\n                    providedIn: 'root',\n                },] }\n    ];\n    /** @nocollapse */\n    NgxRbacGuard.ctorParameters = function () { return [\n        { type: NgxRbacService },\n        { type: Router }\n    ]; };\n    /** @nocollapse */ NgxRbacGuard.ngInjectableDef = defineInjectable({ factory: function NgxRbacGuard_Factory() { return new NgxRbacGuard(inject(NgxRbacService), inject(Router)); }, token: NgxRbacGuard, providedIn: \"root\" });\n    return NgxRbacGuard;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar RbacDirective = /** @class */ (function () {\n    function RbacDirective(el, service) {\n        this.el = el;\n        this.service = service;\n        this.class = {\n            allow: 'rbac-allow',\n            deny: 'rbac-deny',\n        };\n    }\n    /**\n     * @return {?}\n     */\n    RbacDirective.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.subscription = this.service.roles$\n            .pipe(tap(console.warn))\n            .subscribe((/**\n         * @return {?}\n         */\n        function () { return _this.update(); }));\n    };\n    /**\n     * @return {?}\n     */\n    RbacDirective.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.subscription.unsubscribe();\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    RbacDirective.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        console.log(\"ngxRbacClass \\\"\" + this.rule + \"\\\"\", this.class);\n        this.update();\n    };\n    /**\n     * @return {?}\n     */\n    RbacDirective.prototype.update = /**\n     * @return {?}\n     */\n    function () {\n        console.log(this.service.roles, this.class);\n        if (this.service.can(this.rule)) {\n            console.log('allow');\n            if (this.class.deny) {\n                this.el.nativeElement.classList.remove(this.class.deny || '');\n            }\n            if (this.class.allow) {\n                this.el.nativeElement.classList.add(this.class.allow || '');\n            }\n        }\n        else {\n            console.log('deny');\n            if (this.class.allow) {\n                this.el.nativeElement.classList.remove(this.class.allow || '');\n            }\n            if (this.class.deny) {\n                this.el.nativeElement.classList.add(this.class.deny || '');\n            }\n        }\n    };\n    RbacDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[ngxRbac]',\n                },] }\n    ];\n    /** @nocollapse */\n    RbacDirective.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: NgxRbacService }\n    ]; };\n    RbacDirective.propDecorators = {\n        rule: [{ type: Input, args: ['ngxRbac',] }],\n        class: [{ type: Input, args: ['ngxRbacClass',] }]\n    };\n    return RbacDirective;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar ROUTES = new InjectionToken('ROUTES');\n// let NB_INSTANCES = 0;\n//\n// export const UNIQUE_ID = new InjectionToken<string>(\"UNIQUE_ID\");\n//\n// export const UNIQUE_ID_PROVIDER = {\n//     provide: UNIQUE_ID,\n//     useFactory: () => \"my-unique-id-\" + (NB_INSTANCES++)\n// };\nvar NgxRbacModule = /** @class */ (function () {\n    function NgxRbacModule() {\n    }\n    /**\n     * @param {?=} rules\n     * @param {?=} config\n     * @return {?}\n     */\n    NgxRbacModule.forRoot = /**\n     * @param {?=} rules\n     * @param {?=} config\n     * @return {?}\n     */\n    function (rules, config) {\n        if (rules === void 0) { rules = {}; }\n        if (config === void 0) { config = {}; }\n        return {\n            ngModule: NgxRbacModule,\n            providers: [\n                // {provide: 'rules', useValue: rules, multi: true},\n                // {provide: 'config', useValue: config},\n                rbacServiceFactory(rules, config),\n                // NgxRbacService,\n                NgxRbacGuard,\n            ],\n        };\n    };\n    /**\n     * @param {?} section\n     * @param {?} rules\n     * @return {?}\n     */\n    NgxRbacModule.forChild = /**\n     * @param {?} section\n     * @param {?} rules\n     * @return {?}\n     */\n    function (section, rules) {\n        return {\n            ngModule: NgxRbacModule,\n            providers: [\n                rbacServiceFactory(rules, {}),\n                // {provide: 'section', useValue: section},\n                // {provide: 'rules', useValue: rules, multi: true},\n                // NgxRbacService,\n                NgxRbacGuard,\n            ],\n        };\n    };\n    NgxRbacModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [\n                        RouterModule,\n                    ],\n                    declarations: [\n                        NgxRbacComponent,\n                        AccessibleComponent,\n                        RbacDirective,\n                    ],\n                    exports: [\n                        NgxRbacComponent,\n                        AccessibleComponent,\n                        RbacDirective,\n                    ],\n                },] }\n    ];\n    return NgxRbacModule;\n}());\n/** @type {?} */\nvar rbacService = null;\n/**\n * @param {?} rules\n * @param {?} config\n * @return {?}\n */\nfunction rbacServiceFactory(rules, config) {\n    console.log('new rbac service', rules, config);\n    if (rbacService) {\n        console.log('add rules');\n        rbacService.registerRules(rules);\n    }\n    else {\n        rbacService = new NgxRbacService(rules, config);\n    }\n    console.log('all roles', rbacService.allRoles);\n    return [{\n            provide: NgxRbacService,\n            // useFactory: () => rbacService,\n            useValue: rbacService,\n        }];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NgxRbacService, NgxRbacComponent, rbacServiceFactory, ROUTES, NgxRbacModule, NgxRbacGuard, AccessibleComponent, RbacDirective, activatedRouteSnapshotToFullPath, activatedRouteSnapshotToRootPath, segmentsToPath };\n\n//# sourceMappingURL=ngx-rbac.js.map","var map = {\n\t\"./admin/admin.module\": [\n\t\t\"./src/app/admin/admin.module.ts\",\n\t\t\"common\",\n\t\t\"admin-admin-module\"\n\t],\n\t\"./client/client.module\": [\n\t\t\"./src/app/client/client.module.ts\",\n\t\t\"common\",\n\t\t\"client-client-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","module.exports = \"<div id=\\\"wrapper\\\">\\n    <header>\\n        <div class=\\\"container\\\">\\n            <a routerLink=\\\"/\\\">NGX RBAC</a>\\n            <ul class=\\\"navbar\\\">\\n                <li><a [routerLink]=\\\"['/post/intro']\\\">Intro</a></li>\\n                <li><a [routerLink]=\\\"['/post/secret']\\\">Secret</a></li>\\n                <li><a [routerLink]=\\\"['/admin']\\\" ngxRbac=\\\"admin\\\" [ngxRbacClass]=\\\"{deny: 'disabled'}\\\">Admin</a></li>\\n            </ul>\\n        </div>\\n    </header>\\n    <main>\\n        <div class=\\\"container\\\">\\n            <router-outlet></router-outlet>\\n        </div>\\n        <app-toolbox></app-toolbox>\\n    </main>\\n    <footer>\\n        <div class=\\\"container\\\">\\n            footer\\n        </div>\\n    </footer>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\nimport { NgxRbacService } from 'ngx-rbac';\n\n@Component({\n    selector   : 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls  : ['./app.component.scss'],\n})\nexport class AppComponent {\n    title = 'ngx-rbac-demo';\n\n    constructor(public rbac: NgxRbacService) {\n        console.log(rbac);\n        this.rbac.setBaseRoles(['admin']);\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NgxRbacGuard } from 'ngx-rbac';\nimport { NgxRbacModule } from 'ngx-rbac';\nimport { RbacRules } from 'ngx-rbac';\nimport { ToolboxComponent } from './toolbox/toolbox.component';\n\nconst routes: Routes = [\n    {\n        path        : '',\n        loadChildren: './client/client.module#ClientModule',\n    },\n    {\n        path        : 'admin',\n        loadChildren: './admin/admin.module#AdminModule',\n        canLoad     : [NgxRbacGuard],\n        data        : {\n            roles: ['admin', 'moderator'],\n        },\n    },\n    {\n        path      : '**',\n        redirectTo: '',\n    },\n];\n\nconst rules: RbacRules = {\n    admin    : {\n        children: ['moderator', 'user'],\n    },\n    moderator: {\n        children: ['user'],\n    },\n};\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ToolboxComponent,\n    ],\n    imports     : [\n        BrowserModule,\n        RouterModule.forRoot(routes, {enableTracing: true}),\n        NgxRbacModule.forRoot(rules, {defaultRoles: ['user']}),\n    ],\n    providers   : [],\n    bootstrap   : [\n        AppComponent,\n    ],\n})\nexport class AppModule {\n}\n","import { Injectable } from '@angular/core';\nimport { IUser } from './users.interface';\nimport { demoUsers } from './users';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UsersService {\n\n    private users: IUser[];\n\n    constructor() {\n        this.users = demoUsers;\n    }\n\n    public list() {\n        return this.users;\n    }\n}\n","import { IUser } from './users.interface';\n\nexport const demoUsers: IUser[] = [\n    {\n        id   : 'admin',\n        name : 'Admin vseya Rusi',\n        roles: ['admin'],\n    },\n    {\n        id   : 'modya',\n        name : 'I am groot!',\n        roles: ['moderator'],\n    },\n    {\n        id   : 'vasya',\n        name : 'Skromny user',\n        roles: ['user'],\n    },\n];\n","module.exports = \"<div>\\n    <h1>Control</h1>\\n    <h3>Users</h3>\\n    <ul class=\\\"roles\\\">\\n        <li *ngFor=\\\"let item of users\\\"\\n            [ngClass]=\\\"{selected: item.id === user}\\\"\\n            class=\\\"link\\\"\\n            (click)=\\\"setUser(item)\\\"\\n        >{{item.id}}</li>\\n    </ul>\\n    <h3>Roles</h3>\\n    <ul class=\\\"roles\\\">\\n        <li *ngFor=\\\"let role of roles | keyvalue\\\"\\n            [class]=\\\"role.value\\\"\\n        >{{role.key}}</li>\\n    </ul>\\n    <pre>{{rbacService.allRoles | json}}</pre>\\n    <pre>{{rbacService.roles | json}}</pre>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rvb2xib3gvdG9vbGJveC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { NgxRbacService } from 'ngx-rbac';\nimport { UsersService } from '../services/users.service';\nimport { IUser } from '../services/users.interface';\n\n@Component({\n    selector   : 'app-toolbox',\n    templateUrl: './toolbox.component.html',\n    styleUrls  : ['./toolbox.component.scss'],\n})\nexport class ToolboxComponent implements OnInit {\n\n    public user = 'modya';\n\n    public users: IUser[] = [];\n\n    public roles: { [role: string]: string } = {};\n\n    constructor(public rbacService: NgxRbacService,\n                private usersService: UsersService) { }\n\n    ngOnInit() {\n        this.users = this.usersService.list();\n        this.setUser(this.users[1]);\n        this.rbacService.roles$.subscribe(() => this.updateRoles());\n    }\n\n    public setUser(user: IUser) {\n        this.user = user.id;\n        this.rbacService.setBaseRoles(user.roles);\n    }\n\n    updateRoles() {\n        const list = {};\n        Object.keys(this.rbacService.allRoles).forEach(name => list[name] = 'disabled');\n        Object.keys(this.rbacService.roles).forEach(name => list[name] = (this.rbacService.roles[name].base) ? 'selected' : '');\n        this.roles = list;\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}